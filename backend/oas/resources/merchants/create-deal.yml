post:
  operationId: CreateDeal
  summary: Merchant can add a deal to his catalog
  tags:
    - deals
  description: Merchant can add a deal to his catalog
  security:
    # []
    - jwt: []
  x-amazon-apigateway-integration:
    type: aws_proxy
    httpMethod: POST
    uri: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateDeal}/invocations
    responses:
      default:
        statusCode: "200"
        responseParameters:
          method.response.header.Access-Control-Allow-Origin: "'*'"
  requestBody:
    required: true
    description: The deal to add
    content:
      application/json:
        schema:
          $ref: "../../schemas/CreateDealForm.yml"
  responses:
    "200":
      description: Successfully added the deal
      content:
        application/json:
          schema:
            type: object
            required:
              - message
              - dealId
            properties:
              message:
                type: string
                example: "Deal successfully added"
              dealId:
                type: string
                example: "1yn5w7gKp8d7L2M3v4e5T9a6B"
options:
  responses:
    "200":
      description: Successful operation
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
        Access-Control-Allow-Methods:
          schema:
            type: string
        Access-Control-Allow-Headers:
          schema:
            type: string
  x-amazon-apigateway-integration:
    responses:
      default:
        statusCode: "200"
        responseParameters:
          method.response.header.Access-Control-Allow-Methods: "'POST,OPTIONS'"
          method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
          method.response.header.Access-Control-Allow-Origin: "'*'"
    passthroughBehavior: when_no_match
    requestTemplates:
      application/json: '{"statusCode": 200}'
    type: mock
